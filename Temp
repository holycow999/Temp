function createChartsAndStats() {
  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var data = sheet.getDataRange().getValues();

  // Assuming the first row contains headers
  var headers = data[0];
  var issueTypeIndex = headers.indexOf("Issue Type");
  var assigneeIndex = headers.indexOf("Assignee");
  var reporterIndex = headers.indexOf("Reporter");
  var priorityIndex = headers.indexOf("Priority");
  var statusIndex = headers.indexOf("Status");
  var resolutionIndex = headers.indexOf("Resolution");
  var createdIndex = headers.indexOf("Created");

  // Summary Stats
  var issueTypeCounts = {};
  var assigneeCounts = {};
  var reporterCounts = {};
  var priorityCounts = {};
  var statusCounts = {};
  var resolutionCounts = {};
  var thisWeekCount = 0;
  var thisMonthCount = 0;

  // Current Date
  var today = new Date();
  var startOfWeek = new Date(today);
  startOfWeek.setDate(today.getDate() - today.getDay()); // Sunday as the start of the week
  var startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);

  for (var i = 1; i < data.length; i++) {
    var issueType = data[i][issueTypeIndex];
    var assignee = data[i][assigneeIndex];
    var reporter = data[i][reporterIndex];
    var priority = data[i][priorityIndex];
    var status = data[i][statusIndex];
    var resolution = data[i][resolutionIndex];
    var createdDate = new Date(data[i][createdIndex]);

    // Count attributes
    issueTypeCounts[issueType] = (issueTypeCounts[issueType] || 0) + 1;
    assigneeCounts[assignee] = (assigneeCounts[assignee] || 0) + 1;
    reporterCounts[reporter] = (reporterCounts[reporter] || 0) + 1;
    priorityCounts[priority] = (priorityCounts[priority] || 0) + 1;
    statusCounts[status] = (statusCounts[status] || 0) + 1;
    resolutionCounts[resolution] = (resolutionCounts[resolution] || 0) + 1;

    // Count created this week and this month
    if (createdDate >= startOfWeek) thisWeekCount++;
    if (createdDate >= startOfMonth) thisMonthCount++;
  }

  // Output the stats into a new sheet
  var statsSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Summary Stats");
  if (!statsSheet) {
    statsSheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet("Summary Stats");
  } else {
    statsSheet.clear(); // Clear existing data
  }

  // Prepare and display stats
  var statsData = [
    ["Category", "Value", "Count"],
    ["Issues Created", "This Week", thisWeekCount],
    ["Issues Created", "This Month", thisMonthCount],
    ["Issue Type", "", ""],
    ...Object.entries(issueTypeCounts).map(([key, value]) => ["", key, value]),
    ["Assignee", "", ""],
    ...Object.entries(assigneeCounts).map(([key, value]) => ["", key, value]),
    ["Reporter", "", ""],
    ...Object.entries(reporterCounts).map(([key, value]) => ["", key, value]),
    ["Priority", "", ""],
    ...Object.entries(priorityCounts).map(([key, value]) => ["", key, value]),
    ["Status", "", ""],
    ...Object.entries(statusCounts).map(([key, value]) => ["", key, value]),
    ["Resolution", "", ""],
    ...Object.entries(resolutionCounts).map(([key, value]) => ["", key, value]),
  ];

  statsSheet.getRange(1, 1, statsData.length, 3).setValues(statsData);

  // Create Charts
  // Bar Chart for Status Distribution
  var statusRange = statsSheet.getRange("B" + (statsData.findIndex(row => row[0] === "Status") + 2) + ":C" + (statsData.findIndex(row => row[0] === "Resolution") - 1));
  var statusChart = statsSheet.newChart()
    .setChartType(Charts.ChartType.BAR)
    .addRange(statusRange)
    .setPosition(1, 5, 0, 0)
    .setOption("title", "Issue Status Distribution")
    .build();

  // Pie Chart for Resolution Distribution
  var resolutionRange = statsSheet.getRange("B" + (statsData.findIndex(row => row[0] === "Resolution") + 2) + ":C" + statsData.length);
  var resolutionChart = statsSheet.newChart()
    .setChartType(Charts.ChartType.PIE)
    .addRange(resolutionRange)
    .setPosition(20, 5, 0, 0)
    .setOption("title", "Issue Resolution Distribution")
    .build();

  statsSheet.insertChart(statusChart);
  statsSheet.insertChart(resolutionChart);
}
